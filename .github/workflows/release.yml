name: Build and Release

on:
  push:
    tags:
      - "[0-9]*.[0-9]*.[0-9]**"

jobs:

  # do we need/want to run tests again? Might be annoying with the randomly failing ones
  #agent-test:
  #  uses: ./.github/workflows/agent_test.yml
#
  #configdocsgenerator-test:
  #  uses: ./.github/workflows/configdocsgenerator_test.yml
#
  #configurationserver_test:
  #  uses: ./.github/workflows/configurationserver_test.yml
#
  #configuration_ui_test:
  #  uses: ./.github/workflows/configuration_ui_test.yml

  build_and_release:
    name: 'Build and Release'
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build artifacts
        run: |
          ./gradlew assemble bootJarWithFrontend :inspectit-ocelot-core:cyclonedxBom :inspectit-ocelot-configurationserver:cyclonedxBom -PbuildVersion=${{ github.ref_name }}
          mkdir artifacts
          cp ./inspectit-ocelot-agent/build/inspectit-ocelot-agent-${{ github.ref_name }}.jar ./artifacts
          cp ./components/inspectit-ocelot-configurationserver/build/libs/inspectit-ocelot-configurationserver-${{ github.ref_name }}.jar ./artifacts
          mkdir boms
          cp ./inspectit-ocelot-core/build/reports/bom.json ./boms/inspectit-ocelot-agent-bom.json
          cp ./inspectit-ocelot-core/build/reports/bom.xml ./boms/inspectit-ocelot-agent-bom.xml
          cp ./components/inspectit-ocelot-configurationserver/build/reports/bom.json ./boms/inspectit-ocelot-configurationserver-bom.json
          cp ./components/inspectit-ocelot-configurationserver/build/reports/bom.xml ./boms/inspectit-ocelot-configurationserver-bom.xml
          zip -r ./artifacts/software-bill-of-materials.zip ./boms
      - name: Calculate checksums of release artifacts
        working-directory: ./artifacts
        run: for f in *; do sha256sum "$f" >> inspectit-ocelot-sha256-checksums.txt; done
      - name: Create Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          tag_name: ${{ github.event.inputs.boomerang-version }}
          files: artifacts/*
          generate_release_notes: true
          name: Version ${{ github.ref_name }}
          body: "You can also find the corresponding documentation online under the following link: [inspectIT Ocelot Documentation](http://docs.inspectit.rocks)"


  #build_and_publish_docker_images:
  #  name: 'Build and Release'
  #  runs-on: ubuntu-latest
  #  needs: build_and_release
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
  #    - name: Grant execute permission for gradlew
  #      run: chmod +x gradlew
  #    - name: Build Docker Images
  #      run: ./gradlew dockerTag -PbuildVersion=${{ github.ref_name }}
  #    - name: Push Docker Images
  #      run: |
  #        docker login -u ${{ secrets.DOCKER_HUB_USER }} -p  ${{ secrets.DOCKER_HUB_PASSWORD }}
  #        docker push inspectit/inspectit-ocelot-agent:${{ github.ref_name }}
  #        docker push inspectit/inspectit-ocelot-agent:latest
  #        docker push inspectit/inspectit-ocelot-configurationserver:${{ github.ref_name }}
  #        docker push inspectit/inspectit-ocelot-configurationserver:latest
#
  #deploy_release_documentation:
  #  name: "Deploy Release Documentation"
  #  runs-on: ubuntu-latest
  #  needs: build_and_release
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
  #    - name: Use Node.js 16.x
  #      uses: actions/setup-node@v2
  #      with:
  #        node-version: 16.x
  #    - name: Replace Variables in Docs
  #      working-directory: ./inspectit-ocelot-documentation/docs
  #      run:
  #        find . -type f -print0 | xargs -0 sed -i 's/{inspectit-ocelot-version}/'"${{ github.ref_name }}"'/g'
  #        OPEN_CENSUS_VERSION=$(cat ../../gradle.properties | grep -oP '(?<=openCensusVersion=).*')
  #        find . -type f -print0 | xargs -0 sed -i 's/{opencensus-version}/'"${OPEN_CENSUS_VERSION}"'/g'
  #    - name: Create and Publish new Documentation Version
  #      working-directory: ./inspectit-ocelot-documentation/website
  #      run: |
  #        npm install
  #        npm run version ${{ github.ref_name }}
  #        git add versions.json versioned_docs versioned_sidebars
  #        git commit -m "[skip ci] Publish documentation ${{ github.ref_name }}"
  #        git push
  #        GIT_USER=NTTechnicalUser CUSTOM_COMMIT_MESSAGE="[skip ci] Publish documentation ${{ github.ref_name }}" npm run publish-gh-pages
#
